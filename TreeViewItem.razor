@typeparam T

<ul>
    @foreach (var item in ShowingData)
    {
        <li class="tree-item">
            <div @onclick="OnItemClick.HasDelegate ? async () => await OnItemClick.InvokeAsync(item) : null"
                  role="@(OnItemClick.HasDelegate ? "button" : null)"
                  style="width: fit-content">
                @if(ContentTemplate != null)
                {
                    @ContentTemplate(item.Data)
                }
                else
                {
                    <div class="sticky tree-item-content"
                            style="background-color: @item.BackGroundColor; color: @item.Color">
                        @((MarkupString)item.Content)
                    </div>
                }
            </div>
            @if (GetItemsAtNextLevel(item.Id, CurrentLevel).Any())
            {
                <TreeViewItem T="T" ParentId="item.Id" TreeItems="TreeItems.Where(x => x.Level > CurrentLevel).ToList()" />
            }
        </li>
    }
</ul>

